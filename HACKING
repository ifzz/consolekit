Making Changes
==============

Please send all patches/pull requests to the ConsoleKit2 github
repository: https://github.com/ConsoleKit2/ConsoleKit2

All patches should be against the latest version (see Source Code
Repository). Patches can be added to the issue tracker.


Source Code Repository
======================

 - anonymous checkouts

   $ git clone git@github.com:ConsoleKit2/ConsoleKit2.git

 - checkouts over https

   $ git clone https://github.com/ConsoleKit2/ConsoleKit2.git

 - stage changed files

   $ git add -u

 - commit to local repository

   $ git commit

 - pull patch out of local repository to add to issue tracker

   $ git format-patch -1

 - attach patch as an issue on the issue tracker


 - influential environment variables (set these in e.g. .bash_profile)

   export GIT_AUTHOR_NAME='Your Full Name'
   export GIT_COMMITTER_NAME='Your Full Name'
   export GIT_COMMITTER_EMAIL=youremail@domain.net
   export GIT_AUTHOR_EMAIL=youremail@domain.net

 - see also

    http://www.kernel.org/pub/software/scm/git/docs/


Committing Code
===============

 - Commit messages should be of the form (the five lines between the
   lines starting with ===)

=== begin example commit ===
short explanation of the commit

Longer explanation explaining exactly what's changed, whether any
external or private interfaces changed, what bugs were fixed (with bug
tracker reference if applicable) and so forth. Be concise but not too brief.
=== end example commit ===

 - Always add a brief description of the commit to the _first_ line of
   the commit and terminate by two newlines (it will work without the
   second newline, but that is not nice for the interfaces).

 - First line (the brief description) must only be one sentence. It should
   optionally reference issue tracker numbers if they exist.

 - The main description (the body) is normal prose and should use normal
   punctuation and capital letters where appropriate. Normally, for patches
   sent to a mailing list it's copied from there.

 - When committing code on behalf of others use the --author option, e.g.
   git commit -a --author "Joe Coder <joe@coder.org>"


Coding Style
============

 - Follow the coding style already used

 - Write docs for all functions and structs and so on. We use gtkdoc format.
